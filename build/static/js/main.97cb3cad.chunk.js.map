{"version":3,"sources":["utils/useFormHandler.js","views/Singin.js","views/Signup.js","components/CreatePost/CreatePost.js","components/List/List.js","views/Feed.js","components/AuthComponent/AuthComponent.js","App.js","serviceWorker.js","index.js"],"names":["useFormHandler","callback","useState","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","MySwal","withReactContent","Swal","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","history","useHistory","a","url","data","fetch","method","headers","body","JSON","stringify","response","json","postData","then","res","status","console","log","localStorage","setItem","token","push","fire","icon","title","Error","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","noValidate","TextField","required","fullWidth","id","label","autoComplete","onChange","email","autoFocus","type","password","FormControlLabel","control","Checkbox","Button","Grid","container","item","Box","mt","SignUp","confirmPassword","showConfirmButton","timer","message","validate","require","config","AWS","Config","accessKeyId","process","secretAccessKey","region","apiVersions","CreatePost","file","setFile","S3","ManagedUpload","params","Bucket","Key","Body","ACL","promise","err","uploadFile","getItem","content","xs","accept","files","jwt","image","multiline","root","flexGrow","padding","height","img","maxHeight","s3","retrieveFile","getSignedUrl","List","props","pages","pager","setPager","items","setItems","idItem","e","handleGetData","currentPage","page","getData","listPost","pageItems","postElements","map","Paper","alt","src","sm","direction","gutterBottom","style","cursor","onClick","deleteItem","_id","Pagination","hidePrevButton","hideNextButton","count","length","menuButton","marginRight","Feed","AppBar","position","Toolbar","edge","clear","AuthComponent","state","undefined","exp","isValid","now","this","setState","justifyContent","children","Component","withRouter","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"sdAwBeA,EArBQ,SAACC,GAAc,IAAD,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAejC,MAAO,CACHC,aAbiB,SAACC,GACdA,GACAA,EAAMC,iBAEVN,KAUAO,kBAPsB,SAACF,GACvBA,EAAMG,UACNL,GAAU,SAAAD,GAAM,kCAAUA,GAAV,kBAAmBG,EAAMI,OAAOC,KAAOL,EAAMI,OAAOE,YAMpET,W,kCCCFU,EAASC,IAAiBC,KAChC,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,WAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASa,IACtB,IAAMC,EAAUnB,IACVoB,EAAUC,cAFe,4CAK/B,4CAAAC,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAIC,EAAlC,+BAAyC,GAAzC,SACyBC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KANzB,cACQO,EADR,yBAQSA,EAASC,QARlB,4CAL+B,sBAiB/B,IAjB+B,EA0CmBzD,GAzBlC,WAKd,KAtB6B,2CAuB3B0D,CApBQ,4CAoBMvD,GACbwD,MAAK,SAACC,GACc,OAAfA,EAAIC,QACNC,QAAQC,IAAIH,GACZI,aAAaC,QAAQ,QAASL,EAAIM,OAElCrB,EAAQsB,KAAK,UAEbtD,EAAOuD,KAAK,CACVC,KAAM,iBACNC,MAAO,sCAKd,MAAMC,QAIFpE,EA1CwB,EA0CxBA,OAAQK,EA1CgB,EA0ChBA,kBAAmBH,EA1CH,EA0CGA,aAElC,OACE,kBAACmE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWhC,EAAQhB,OACtB,kBAACiD,EAAA,EAAD,CAAQD,UAAWhC,EAAQV,QACzB,kBAAC,IAAD,OAEF,kBAACjB,EAAA,EAAD,CAAYwD,UAAU,KAAKvD,QAAQ,MAAnC,WAGA,0BAAM0D,UAAWhC,EAAQJ,KAAMsC,SAAUzE,EAAc0E,YAAU,GAC/D,kBAACC,EAAA,EAAD,CACE9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNzE,KAAK,QACL0E,aAAa,QACbC,SAAU9E,EACVI,MAAOT,EAAOoF,MACdC,WAAS,IAEX,kBAACR,EAAA,EAAD,CACE9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTvE,KAAK,WACLyE,MAAM,WACNK,KAAK,WACLN,GAAG,WACHE,aAAa,mBACbC,SAAU9E,EACVI,MAAOT,EAAOuF,WAEhB,kBAACC,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUjF,MAAM,WAAWO,MAAM,YAC1CiE,MAAM,gBAER,kBAACU,EAAA,EAAD,CACEL,KAAK,SACLP,WAAS,EACThE,QAAQ,YACRC,MAAM,UACNyD,UAAWhC,EAAQF,QALrB,WASA,kBAACqD,EAAA,EAAD,CAAMC,WAAS,GAMb,kBAACD,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC5E,EAAA,EAAD,CAAMC,KAAK,UAAUJ,QAAQ,SAC1B,sCAMX,kBAACgF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACnF,EAAD,QC/IR,IAAMH,EAASC,IAAiBC,KAChC,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,WAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASsE,IACtB,IAAMxD,EAAUnB,IACVoB,EAAUC,cAFe,4CAK/B,4CAAAC,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAIC,EAAlC,+BAAyC,GAAzC,SACyBC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KANzB,cACQO,EADR,yBAQSA,EAASC,QARlB,4CAL+B,sBAiB/B,IAjB+B,EAwDmBzD,GAvClC,WAId,GAAIG,EAAOuF,WAAavF,EAAOkG,gBAE3B,KAvByB,2CAwBzB3C,CArBM,4CAqBQvD,GACbwD,MAAK,SAACC,GACgB,OAAfA,EAAIC,QACRC,QAAQC,IAAIH,GACZ/C,EAAOuD,KAAK,CACRC,KAAM,UACNC,MAAO,gBACPgC,mBAAmB,EACnBC,MAAO,OAGX1D,EAAQsB,KAAK,MAEbtD,EAAOuD,KAAK,CACRC,KAAM,iBACNC,MAAOV,EAAI4C,aAKlB,MAAMjC,SAIP1D,EAAOuD,KAAK,CACRC,KAAM,QACNC,MAAO,sBACPgC,mBAAmB,EACnBC,MAAO,UAIVpG,EAxDwB,EAwDxBA,OAAQK,EAxDgB,EAwDhBA,kBAAmBH,EAxDH,EAwDGA,aAElC,OACE,kBAACmE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWhC,EAAQhB,OACpB,kBAAC,IAAD,MACF,kBAACX,EAAA,EAAD,CAAYwD,UAAU,KAAKvD,QAAQ,MAAnC,WAGA,0BAAM0D,UAAWhC,EAAQJ,KAAMsC,SAAUzE,EAAcoG,UAAQ,GAC7D,kBAACzB,EAAA,EAAD,CACE9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNzE,KAAK,QACL0E,aAAa,QACbC,SAAU9E,EACVI,MAAOT,EAAOoF,MACdC,WAAS,IAET,kBAACR,EAAA,EAAD,CACA9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNzE,KAAK,OACL2E,SAAU9E,EACVI,MAAOT,EAAOQ,KACd6E,WAAS,IAEX,kBAACR,EAAA,EAAD,CACE9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTvE,KAAK,WACLyE,MAAM,WACNK,KAAK,WACLN,GAAG,WACHG,SAAU9E,EACVI,MAAOT,EAAOuF,WAElB,kBAACV,EAAA,EAAD,CACI9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTvE,KAAK,kBACLyE,MAAM,mBACNK,KAAK,WACLN,GAAG,kBACHG,SAAU9E,EACVI,MAAOT,EAAOkG,kBAEhB,kBAACP,EAAA,EAAD,CACEL,KAAK,SACLP,WAAS,EACThE,QAAQ,YACRC,MAAM,UACNyD,UAAWhC,EAAQF,QALrB,WASA,kBAACqD,EAAA,EAAD,CAAMC,WAAS,GAMb,kBAACD,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC5E,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,SACpB,uCAMX,kBAACgF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,Q,qBC5LRO,EAAQ,IAAUC,SAClB,IAEMC,EAAMF,EAAQ,IACpBE,EAAID,OAAS,IAAIC,EAAIC,OACrBD,EAAID,OAAOG,YAJMC,uBAKjBH,EAAID,OAAOK,gBAJID,2CAKfH,EAAID,OAAOM,OAAS,YACpBL,EAAID,OAAOO,YAAc,CACvB,GAAM,cAKR,IAAMrG,EAASC,IAAiBC,KAuCjB,SAASoG,IAAe,IAAD,EACZjH,mBAAS,IADG,mBAC7BkH,EAD6B,KACvBC,EADuB,iDAiBpC,4CAAAtE,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAIC,EAAlC,+BAAyC,GAAzC,SACyBC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KANzB,cACQO,EADR,yBAQSA,EAASC,QARlB,4CAjBoC,4BA2DczD,GA/BlD,YAhEF,SAAoBoH,GAGL,IAAIR,EAAIU,GAAGC,cAAc,CACpCC,OAAQ,CACNC,OAAQ,cACRC,IAAKN,EAAI,KACTO,KAAMP,EACNQ,IAAK,iBAIYC,UACblE,MACN,SAASV,GACPa,QAAQC,IAAI,mCAEd,SAAS+D,GACPhE,QAAQC,IAAI,4CAA6C+D,EAAItB,YA+C/DuB,CAAWX,GAEX,IACEjH,EAAO+D,MAAQF,aAAagE,QAAQ,SAhCJ,0CAiChCtE,CA/BQ,iDA+BMvD,GACbwD,MAAK,SAACC,GACc,OAAfA,EAAIC,QACNC,QAAQC,IAAIH,GACZ/C,EAAOuD,KAAK,CACVC,KAAM,UACNC,MAAOV,EAAI4C,QACXF,mBAAmB,EACnBC,MAAO,QAGT1F,EAAOuD,KAAK,CACVC,KAAM,wBACNC,MAAOV,EAAI4C,UAGfrG,EAAOmE,MAAQ,GACfnE,EAAO8H,QAAU,GACjB9H,EAAOiH,KAAO,MAGjB,MAAM7C,QAKFpE,EA3D6B,EA2D7BA,OAAQK,EA3DqB,EA2DrBA,kBAAmBH,EA3DE,EA2DFA,aAEhC,OACE,kBAACmE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACqB,EAAA,EAAD,CAAMC,WAAS,GACjB,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACiC,GAAI,IACf,kBAACjH,EAAA,EAAD,CAAYwD,UAAU,KAAKvD,QAAQ,MAAnC,qBAIA,kBAAC6E,EAAA,EAAD,CAAME,MAAI,EAACiC,GAAI,IACf,2BAAOzC,KAAK,OACbN,GAAG,OAAOxE,KAAK,OACfwH,OAAO,wBAAwB7C,SAnEpC,SAAyBhF,GACvB+G,EAAQ/G,EAAMI,OAAO0H,MAAM,IADE,IAEtB7C,EAAS8C,IAAIrE,aAAagE,QAAQ,UAAlCzC,MACPpF,EAAOoF,MAAQA,EACfpF,EAAOmI,MAAQhI,EAAMI,OAAO0H,MAAM,GAAGzH,KACrCR,EAAOiH,KAAO9G,EAAMI,OAAO0H,MAAM,MA+D9B,0BAAMtD,SAAUzE,GACf,kBAAC2E,EAAA,EAAD,CACI9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNzE,KAAK,QACL2E,SAAU9E,EACVI,MAAOT,EAAOmE,MACdkB,WAAS,IAEb,kBAACR,EAAA,EAAD,CACI9D,QAAQ,WACRiB,OAAO,SACP8C,UAAQ,EACRC,WAAS,EACTC,GAAG,UACHC,MAAM,UACNzE,KAAK,UACL2E,SAAU9E,EACVI,MAAOT,EAAO8H,QACdM,WAAS,IAEb,kBAACzC,EAAA,EAAD,CACIL,KAAK,SACLP,WAAS,EACThE,QAAQ,YACRC,MAAM,WAJV,a,sBCvJFN,EAASC,IAAiBC,KAE1BU,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC6G,KAAM,CACJC,SAAU,GAEZ7G,MAAO,CACL8G,QAAS/G,EAAMG,QAAQ,GACvBK,OAAQ,MACRuC,SAAU,KAEZ4D,MAAO,CACL7F,MAAO,IACPkG,OAAQ,KAEVC,IAAK,CACHzG,OAAQ,OACRJ,QAAS,QACT2C,SAAU,QACVmE,UAAW,aAIjBnC,EAAQ,IAAUC,SAClB,IAEMC,EAAMF,EAAQ,IACpBE,EAAID,OAAS,IAAIC,EAAIC,OACrBD,EAAID,OAAOG,YAJMC,uBAKjBH,EAAID,OAAOK,gBAJID,2CAKfH,EAAID,OAAOM,OAAS,YACpBL,EAAID,OAAOO,YAAc,CACvB,GAAM,cAER,IAAM4B,EAAK,IAAIlC,EAAIU,GAEnB,SAASyB,EAAa3B,GACpB,IAAII,EAAS,CACXC,OAAQ,cACRC,IAAKN,GAIHpE,EAAM8F,EAAGE,aAAa,YAAaxB,GAEvC,OADA1D,QAAQC,IAAI,aAAcf,GACnBA,EAIM,SAASiG,GAAMC,GAAQ,IAAD,EACPhJ,mBAAS,CAACiJ,MAAO,CAAC,EAAE,KADb,mBAC1BC,EAD0B,KACnBC,EADmB,OAEPnJ,mBAAS,IAFF,mBAE1BoJ,EAF0B,KAEnBC,EAFmB,iDAIjC,WAA0BC,EAAOC,GAAjC,mBAAA1G,EAAA,6DACI0G,EAAElJ,iBADN,EAEiB8H,IAAIrE,aAAagE,QAAQ,UAA/B7C,EAFX,EAEWA,GACDnC,EAAM,6CAA+CmC,EAAK,SAAWqE,EAH/E,SAI2BtG,MAAMF,EAAK,CAC9BG,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAP1B,OAU8B,MAV9B,OAUmBS,QACX6F,EAAcN,EAAMO,aACpB9I,EAAOuD,KAAK,CACVC,KAAM,UACNC,MAAO,gBACPgC,mBAAmB,EACnBC,MAAO,QAGT1F,EAAOuD,KAAK,CACVC,KAAM,QACNC,MAAO,0BACPgC,mBAAmB,EACnBC,MAAO,OAvBjB,4CAJiC,+BAiClBmD,EAjCkB,8EAiCjC,WAA6BE,GAA7B,IAEmBC,EAFnB,WAAA9G,EAAA,iGAAAA,EAAA,MAEI,WAAuB6G,GAAvB,qBAAA7G,EAAA,+DACiBsF,IAAIrE,aAAagE,QAAQ,UAA/B7C,EADX,EACWA,GACDnC,EAAM,6CAA+CmC,EAAK,IAAMyE,EAF1E,SAI2B1G,MAAMF,GAJjC,cAIUQ,EAJV,yBAWWA,EAASC,QAXpB,4CAFJ,uBAEmBoG,EAFnB,qDAgBwBA,EAAQD,GAAMjG,MAAK,YAA4B,IAA1BmG,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAC/CV,EAASS,GACTP,EAASQ,MAlBjB,0DAjCiC,sBAwDjC,IAAMnH,EAAUnB,IACVuI,EAAeV,EAAMW,KAAI,SAAAhE,GAAI,OAC/B,kBAACiE,EAAA,EAAD,CAAOtF,UAAWhC,EAAQhB,OACtB,kBAACmE,EAAA,EAAD,CAAMC,WAAS,EAAClE,QAAS,GAC3B,kBAACiE,EAAA,EAAD,CAAME,MAAI,GACN,yBAAKrB,UAAWhC,EAAQgG,IAAKuB,IAAI,UAAUC,IAAKrB,EAAa9C,EAAKqC,UAEtE,kBAACvC,EAAA,EAAD,CAAME,MAAI,EAACiC,GAAI,GAAImC,IAAE,EAACrE,WAAS,GAC7B,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACiC,IAAE,EAAClC,WAAS,EAACsE,UAAU,SAASxI,QAAS,GAClD,kBAACiE,EAAA,EAAD,CAAME,MAAI,EAACiC,IAAE,GACX,kBAACjH,EAAA,EAAD,CAAYsJ,cAAY,EAACrJ,QAAQ,aAChC+E,EAAK3B,OAEN,kBAACrD,EAAA,EAAD,CAAYC,QAAQ,QAAQqJ,cAAY,GACvCtE,EAAKgC,UAGR,kBAAClC,EAAA,EAAD,CAAME,MAAI,GACV,kBAACH,EAAA,EAAD,CACEL,KAAK,SACLP,WAAS,EACThE,QAAQ,YACRC,MAAM,UACNqJ,MAAO,CAAEC,OAAQ,WACjBC,QAAS,SAACjB,GAAD,OAhFY,6CAgFLkB,CAAW1E,EAAK2E,IAAKnB,KANvC,mBAmBV,OACI,kBAACjF,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,6BAAMsF,GACN,kBAACa,EAAA,EAAD,CACAC,gBAAc,EACdC,gBAAc,EACdC,MAAO5B,EAAMD,MAAM8B,OACnBrB,KAAK,IACLtE,SAAU,SAAChF,EAAOsJ,GACdF,EAAcE,O,wBCrJxBnI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6G,KAAM,CACJC,SAAU,GAEZyC,WAAY,CACVC,YAAaxJ,EAAMG,QAAQ,IAE7BwC,MAAO,CACLmE,SAAU,OAGR5H,GAASC,IAAiBC,KAEjB,SAASqK,KACtB,IAAMvI,EAAUC,cACVF,EAAUnB,KAcd,OACE,yBAAKmD,UAAWhC,EAAQ4F,MAChB,kBAAC6C,GAAA,EAAD,CAAQC,SAAS,UACvB,kBAACC,GAAA,EAAD,KAEE,kBAACtK,EAAA,EAAD,CAAYC,QAAQ,KAAK0D,UAAWhC,EAAQ0B,OAA5C,aAGA,kBAACwB,EAAA,EAAD,CAAQ0F,KAAK,MAAMrK,MAAM,UAAUuJ,QApB3C,WACE7J,GAAOuD,KAAK,CACVC,KAAM,UACNC,MAAO,oBACPgC,mBAAmB,EACnBC,MAAO,OAETvC,aAAayH,QACb5I,EAAQsB,KAAK,OAYP,aAGJ,kBAACK,EAAA,EAAD,KACA,kBAAC2C,EAAD,MACA,kBAAC8B,GAAD,Q,0CC5CAyC,I,2DACF,WAAYxC,GAAQ,IAAD,+BACf,cAAMA,IACDyC,MAAQ,CACT9H,YAAQ+H,GAHG,E,iEASf,IACI,IAAM1H,EAAQF,aAAagE,QAAQ,SAC9B6D,EAAOxD,IAAInE,GAAX2H,IAGCC,GAFND,GAAY,MACAtK,KAAKwK,MAGjBC,KAAKC,SAAS,CAACpI,OAAQiI,IAE1B,MAAMvH,GAEHyH,KAAKC,SAAS,CAACpI,QAAQ,O,+BAU3B,YAA0B+H,IAAtBI,KAAKL,MAAM9H,OAEP,yBAAK2G,MAAO,CAACzI,QAAS,OAAQmK,eAAe,SAAUjK,WAAY,WAC/D,yBAAK2C,UAAU,gBAAe,8BAAW,8BAAW,8BAAW,kCAIjD,IAAtBoH,KAAKL,MAAM9H,QACCmI,KAAK9C,MAAMrG,QAAQsB,KAAK,KAEzB6H,KAAK9C,MAAMiD,c,GAzCNC,cA8CbC,eAAWX,IChCXY,OAdf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAAC/H,UAAW9B,IACjC,kBAAC,IAAD,CAAO4J,KAAK,UAAUC,OAAK,EAAC/H,UAAW2B,IACvC,kBAAC,GAAD,KACA,kBAAC,IAAD,CAAOmG,KAAK,QAAQ9H,UAAW2G,SCHnBqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,GAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzJ,MAAK,SAAA0J,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1J,QAAQ0J,MAAMA,EAAMhH,a","file":"static/js/main.97cb3cad.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst useFormHandler = (callback) => {\r\n    const [inputs, setInputs] = useState({});\r\n\r\n    const handleSubmit = (event) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        callback();\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        event.persist();\r\n        setInputs(inputs => ({ ...inputs, [event.target.name]: event.target.value }));\r\n    }\r\n\r\n    return {\r\n        handleSubmit,\r\n        handleInputChange,\r\n        inputs\r\n    };\r\n}\r\nexport default useFormHandler;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css';\r\nimport useFormHandler from '../utils/useFormHandler';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst MySwal = withReactContent(Swal);\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Post-21\r\n      </Link>{'/'}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const url = \"https://post21plus.herokuapp.com/api/auth\"\r\n\r\n  async function postData(url = '', data = {}) {\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json()\r\n  }\r\n  \r\n\r\n  const signin =  () => {\r\n    // alert(`User Created!\r\n    //        Password: ${inputs.password}\r\n    //        Email: ${inputs.email}`);\r\n\r\n    try {\r\n      postData(url, inputs)\r\n      .then((res) => {\r\n        if (res.status === \"OK\"){\r\n          console.log(res)\r\n          localStorage.setItem(\"token\", res.token)\r\n          //const {id, email} = jwt(res.token);\r\n          history.push(\"/feed\");\r\n        }else {\r\n          MySwal.fire({\r\n            icon: 'Check again :)',\r\n            title: \"Not a valid e-mail or password\"\r\n          })\r\n        }\r\n      })\r\n      \r\n    }catch(Error){\r\n\r\n    }\r\n  }\r\n  const {inputs, handleInputChange, handleSubmit} = useFormHandler(signin);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={handleInputChange}\r\n            value={inputs.email}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleInputChange}\r\n            value={inputs.password}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css';\r\nimport useFormHandler from '../utils/useFormHandler';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst MySwal = withReactContent(Swal);\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Post-21\r\n      </Link>{'/'}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const url = \"https://post21plus.herokuapp.com/api/user\"\r\n\r\n  async function postData(url = '', data = {}) {\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json()\r\n  }\r\n  \r\n\r\n  const signup =  () => {\r\n    // alert(`User Created!\r\n    //        Password: ${inputs.password}\r\n    //        Email: ${inputs.email}`);\r\n    if (inputs.password === inputs.confirmPassword)\r\n    {\r\n        try {\r\n        postData(url, inputs)\r\n        .then((res) => {\r\n            if (res.status === \"OK\"){\r\n            console.log(res)\r\n            MySwal.fire({\r\n                icon: 'success',\r\n                title: 'User created!',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            //const {id, email} = jwt(res.token);\r\n            history.push(\"/\");\r\n            }else {\r\n            MySwal.fire({\r\n                icon: 'Check again :)',\r\n                title: res.message\r\n            })\r\n            }\r\n        })\r\n        \r\n        }catch(Error){\r\n\r\n        }\r\n    } else {\r\n        MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Check your password',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n    }\r\n  }\r\n  const {inputs, handleInputChange, handleSubmit} = useFormHandler(signup);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n          <LockOutlinedIcon />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} validate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={handleInputChange}\r\n            value={inputs.email}\r\n            autoFocus\r\n          />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            onChange={handleInputChange}\r\n            value={inputs.name}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={handleInputChange}\r\n            value={inputs.password}\r\n          />\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            onChange={handleInputChange}\r\n            value={inputs.confirmPassword}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                {\"Do you have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Container, Grid } from '@material-ui/core';\r\n//import styles from './Feed.module.css';\r\nimport useFormHandler from '../../utils/useFormHandler';\r\nimport jwt from 'jwt-decode'\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nrequire('dotenv').config();\r\nconst s3_acces = process.env.REACT_APP_S3_KEY;\r\nconst s3_key = process.env.REACT_APP_S3_SECRET;\r\nconst AWS = require('aws-sdk');\r\nAWS.config = new AWS.Config();\r\nAWS.config.accessKeyId = s3_acces;\r\nAWS.config.secretAccessKey = s3_key;\r\nAWS.config.region = \"us-east-2\";\r\nAWS.config.apiVersions = {\r\n  \"s3\": \"2006-03-01\"\r\n}\r\n\r\n\r\n//const s3 = new AWS.S3();\r\nconst MySwal = withReactContent(Swal);\r\n\r\n\r\nfunction uploadFile(file){\r\n\r\n\r\n  var upload = new AWS.S3.ManagedUpload({\r\n    params: {\r\n      Bucket: \"dionibucket\",\r\n      Key: file['name'],\r\n      Body: file,\r\n      ACL: \"public-read\"\r\n    }\r\n  });\r\n\r\n  var promise = upload.promise();\r\n  promise.then(\r\n    function(data) {\r\n      console.log(\"Successfully uploaded photo.\");\r\n    },\r\n    function(err) {\r\n      console.log(\"There was an error uploading your photo: \", err.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\n// function retrieveFile(file){\r\n//   var params = {\r\n//     Bucket: \"dionibucket\", \r\n//     Key: file, \r\n//    };\r\n\r\n  \r\n//   var url = s3.getSignedUrl('getObject', params);\r\n//   console.log('The URL is', url);\r\n//   return url\r\n// }\r\n\r\nexport default function CreatePost () {\r\n  const [file, setFile] = useState(\"\");\r\n  const url = \"https://post21plus.herokuapp.com/api/user/post\"\r\n\r\n\r\n  function onChangeHandler(event){\r\n    setFile(event.target.files[0]);\r\n    const {email} = jwt(localStorage.getItem('token'));\r\n    inputs.email = email;\r\n    inputs.image = event.target.files[0].name;\r\n    inputs.file = event.target.files[0];\r\n  }\r\n\r\n//   function getObject(){\r\n//      setImg(retrieveFile(file.name));\r\n//   }\r\n\r\n  async function postData(url = '', data = {}) {\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json()\r\n  }\r\n\r\n  function submitPost(){\r\n    uploadFile(file);\r\n    //console.log(inputs);\r\n    try {\r\n      inputs.token = localStorage.getItem('token');\r\n      postData(url, inputs)\r\n      .then((res) => {\r\n        if (res.status === \"OK\"){\r\n          console.log(res)\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: res.message,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n        }else {\r\n          MySwal.fire({\r\n            icon: 'Something is worng :(',\r\n            title: res.message\r\n          })\r\n        }\r\n        inputs.title = \"\";\r\n        inputs.content = \"\";\r\n        inputs.file = {};\r\n      })\r\n      \r\n    }catch(Error){\r\n\r\n    }\r\n\r\n  }\r\n  const {inputs, handleInputChange, handleSubmit} = useFormHandler(submitPost);\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">        \r\n          <Grid container>\r\n        <Grid item xs={12}>\r\n        <Typography component=\"h4\" variant=\"h5\">\r\n          Upload the image\r\n        </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n        <input type=\"file\"\r\n       id=\"file\" name=\"file\"\r\n       accept=\"image/png, image/jpeg\" onChange={onChangeHandler}></input>\r\n       <form onSubmit={handleSubmit} >\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            onChange={handleInputChange}\r\n            value={inputs.title}\r\n            autoFocus\r\n        />\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"content\"\r\n            label=\"Content\"\r\n            name=\"content\"\r\n            onChange={handleInputChange}\r\n            value={inputs.content}\r\n            multiline\r\n        />\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            \r\n          >\r\n            Send!\r\n          </Button>\r\n          </form>\r\n       </Grid>\r\n       </Grid>\r\n        \r\n        \r\n      </Container>\r\n    )\r\n\r\n};\r\n","import React, {useState}from 'react';\r\nimport { Button, Paper, Typography, Container, Grid } from '@material-ui/core';\r\nimport jwt from 'jwt-decode'\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: 'apx',\r\n      maxWidth: 500,\r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 128,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100px',\r\n      maxHeight: '100px',\r\n    },\r\n  }));\r\n\r\nrequire('dotenv').config();\r\nconst s3_acces = process.env.REACT_APP_S3_KEY;\r\nconst s3_key = process.env.REACT_APP_S3_SECRET;\r\nconst AWS = require('aws-sdk');\r\nAWS.config = new AWS.Config();\r\nAWS.config.accessKeyId = s3_acces;\r\nAWS.config.secretAccessKey = s3_key;\r\nAWS.config.region = \"us-east-2\";\r\nAWS.config.apiVersions = {\r\n  \"s3\": \"2006-03-01\"\r\n}\r\nconst s3 = new AWS.S3();\r\n\r\nfunction retrieveFile(file){\r\n  var params = {\r\n    Bucket: \"dionibucket\", \r\n    Key: file, \r\n   };\r\n\r\n  \r\n  var url = s3.getSignedUrl('getObject', params);\r\n  console.log('The URL is', url);\r\n  return url\r\n}\r\n\r\n\r\nexport default function List (props) {\r\n    const [pager, setPager] = useState({pages: [1,1]});\r\n    const [items, setItems] = useState([]);\r\n\r\n    async function deleteItem(idItem,e){\r\n        e.preventDefault();\r\n        const {id} = jwt(localStorage.getItem('token'));\r\n        const url = \"https://post21plus.herokuapp.com/api/user/\" + id + \"/post/\" + idItem;\r\n        const response = await fetch(url, {\r\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n          });\r\n          if (response.status === 200){\r\n            handleGetData(pager.currentPage);\r\n            MySwal.fire({\r\n              icon: 'success',\r\n              title: 'Post deleted!',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n          })\r\n          } else {\r\n            MySwal.fire({\r\n              icon: 'error',\r\n              title: 'Ops! something is wrong',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n          })\r\n          }\r\n    }\r\n    \r\n\r\n    async function handleGetData(page) {\r\n\r\n        async function getData(page){\r\n            const {id} = jwt(localStorage.getItem('token'));\r\n            const url = \"https://post21plus.herokuapp.com/api/post/\" + id + '/' + page\r\n        \r\n            const response = await fetch(url,)\r\n            // .then(res => res.json())\r\n            // .then(({listPost, pageItems}) => {\r\n            //     setPager(listPost)\r\n            //     setItems(pageItems)\r\n            //     })\r\n\r\n            return response.json()\r\n            }\r\n        \r\n        const data =  await getData(page).then(({listPost, pageItems}) => {\r\n            setPager(listPost)\r\n            setItems(pageItems)\r\n            })\r\n        \r\n    }\r\n\r\n    const classes = useStyles();\r\n    const postElements = items.map(item => \r\n        <Paper className={classes.paper}>\r\n            <Grid container spacing={2}>\r\n          <Grid item>\r\n              <img className={classes.img} alt=\"complex\" src={retrieveFile(item.image)} />\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                {item.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                {item.content}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={(e) => deleteItem(item._id, e)}\r\n                >\r\n            Delete!\r\n          </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        </Paper>\r\n    \r\n    )\r\n    \r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div>{postElements}</div>\r\n            <Pagination\r\n            hidePrevButton\r\n            hideNextButton\r\n            count={pager.pages.length}\r\n            page=\"1\"\r\n            onChange={(event, page) =>{\r\n                handleGetData(page)\r\n            }}\r\n            /> \r\n        </Container>\r\n    )\r\n\r\n};","import React from 'react';\r\nimport CreatePost from '../components/CreatePost/CreatePost'\r\nimport List from '../components/List/List';\r\nimport { Container, Button, Toolbar , AppBar, Typography  } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default function Feed () {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  function logOut(){\r\n    MySwal.fire({\r\n      icon: 'success',\r\n      title: 'We will miss you!',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  }\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n              <AppBar position=\"static\">\r\n        <Toolbar>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            My posts!\r\n          </Typography>\r\n          <Button edge=\"end\" color=\"inherit\" onClick={logOut}>Log out</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container>\r\n      <CreatePost />\r\n      <List/>\r\n      </Container>\r\n      </div>\r\n    )\r\n\r\n};\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport jwt from 'jwt-decode'\r\nimport \"./AuthComponent.css\"\r\n\r\n\r\n\r\nclass AuthComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Verify the expiration of the token...If it doesnt exists catch the error and set the status false\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            let {exp} = jwt(token);\r\n            exp = exp * 1000;\r\n            const now = Date.now();\r\n            const isValid = (exp >= now)\r\n            \r\n            this.setState({status: isValid}) \r\n            \r\n        }catch(Error){\r\n\r\n            this.setState({status: false})\r\n            \r\n        }\r\n\r\n\r\n        //console.log(\"DataAuthComp\", this.state.user);\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.status === undefined) {\r\n            return (\r\n                <div style={{display: \"flex\", justifyContent:\"center\", alignItems: \"center\"}}>\r\n                    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n                    );\r\n                }\r\n        if (this.state.status !== true) {\r\n                        this.props.history.push('/');\r\n                }\r\n                return this.props.children;\r\n            }\r\n    \r\n        }\r\n        \r\nexport default withRouter(AuthComponent);","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SignIn from './views/Singin';\nimport SignUp from './views/Signup';\nimport Feed from './views/Feed';\nimport AuthComponent from './components/AuthComponent/AuthComponent'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={SignIn} />\n        <Route path=\"/signup\" exact component={SignUp} />\n        <AuthComponent>\n        <Route path=\"/feed\" component={Feed} />\n        </AuthComponent>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}